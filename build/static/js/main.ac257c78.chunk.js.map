{"version":3,"sources":["actionTypes.js","firebase.js","actions/notesAction.js","components/NoteCard.js","actions/userAction.js","components/App.js","registerServiceWorker.js","reducers/index.js","reducers/notesReducer.js","reducers/userReducer.js","reducers/loadingReducer.js","components/Login.js","routes/Header.js","components/Loading.js","components/LoadingComponent.js","components/AuthenticatedComponent.js","components/SubmitComment.js","components/Comment.js","components/NoteDetail.js","components/NoteEdit.js","index.js"],"names":["GET_NOTES","GET_USER","USER_STATUS","NOTES_STATUS","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","auth","googleProvider","GoogleAuthProvider","twitterProvider","TwitterAuthProvider","getNotes","dispatch","type","payload","on","snapshot","val","NoteCard","_ref","children","react_default","a","createElement","className","getUser","onAuthStateChanged","user","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","body","handleChange","bind","assertThisInitialized","handleSubmit","renderNotes","e","setState","defineProperty","target","name","value","preventDefault","note","uid","saveNote","_this2","_","map","notes","key","components_NoteCard","react_router_dom","to","concat","onClick","deleteNote","src","photoURL","height","style","padding","displayName","onSubmit","onChange","placeholder","required","Component","connect","ownProps","disptch","push","id","child","remove","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","rootReducer","combineReducers","arguments","length","undefined","action","loading","objectSpread","Login","history","nextProps","marginTop","Date","getFullYear","googleLogin","twitterLogin","onwProps","signInWithPopup","Header","data-toggle","data-target","logout","signOut","Loading","LoadingComponent","_this$props","userLoading","notesLoading","_this$props2","components_Loading","withRouter","AuthenticatedComponent","SubmitComment","commentBody","comment","saveComment","noteId","Comment","NoteDetail","comments","components_Comment","components_SubmitComment","params","renderComments","NoteEdit","editNote","update","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","es","components_LoadingComponent","react_router","path","component","exact","from","components_AuthenticatedComponent","routes_Header","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ac257c78.chunk.js","sourcesContent":["export const GET_NOTES = 'GET_NOTES';\nexport const GET_USER = 'GET_USER';\n\nexport const USER_STATUS = 'USER_STATUS';\nexport const NOTES_STATUS = 'NOTES_STATUS';\n","import * as firebase from \"firebase\";\n// Initialize Firebase\nvar config = {\n    apiKey: \"AIzaSyAOXiMXRUwNg7FQkn3WFhiKcKwZr5wblRI\",\n    authDomain: \"diary-25027.firebaseapp.com\",\n    databaseURL: \"https://diary-25027.firebaseio.com\",\n    projectId: \"diary-25027\",\n    storageBucket: \"diary-25027.appspot.com\",\n    messagingSenderId: \"661395996534\",\n    appId: \"1:661395996534:web:66212869b0e96c45\"\n};\nfirebase.initializeApp(config);\n\nexport const database = firebase.database().ref(\"/notes\");\n\nexport const auth = firebase.auth();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\nexport const twitterProvider = new firebase.auth.TwitterAuthProvider();\n","import { GET_NOTES, NOTES_STATUS } from '../actionTypes';\nimport { database } from '../firebase';\n\nexport function getNotes() {\n    return dispatch => {\n        // as soon as this function fires show loading to true\n        dispatch({\n            type: NOTES_STATUS,\n            payload: true\n        });\n        database.on(\n            'value',\n            snapshot => {\n                dispatch({\n                    type: GET_NOTES,\n                    payload: snapshot.val()\n                });\n                // once notes are received show loading to false\n                dispatch({\n                    type: NOTES_STATUS,\n                    payload: false\n                });\n                // wait until something changes and try again\n            },\n            () => {\n                dispatch({\n                    type: NOTES_STATUS,\n                    payload: -1\n                });\n            }\n        );\n    };\n}\n\nexport function saveNote(note) {\n    return disptch => database.push(note);\n}\n\nexport function editNote(id, note) {\n    return dispatch => database.child(id).update(note);\n}\n\nexport function deleteNote(id) {\n    return dispatch => database.child(id).remove();\n}\n\nexport function saveComment(noteId, comment) {\n    return dispatch => {\n        database\n            .child(noteId)\n            .child('comments')\n            .push(comment);\n    };\n}\n","import React from 'react';\n\nconst NoteCard = ({ children }) => (\n    <div className=\"jumbotron\">\n        <div>{children}</div>\n    </div>\n);\n\nexport default NoteCard;\n","import { auth, googleProvider, twitterProvider } from '../firebase';\nimport { GET_USER, USER_STATUS } from '../actionTypes';\n\nexport function getUser() {\n    return dispatch => {\n        // show loading status before getting user to true\n        dispatch({\n            type: USER_STATUS,\n            payload: true\n        });\n        auth.onAuthStateChanged(user => {\n            dispatch({\n                type: GET_USER,\n                payload: user\n            });\n            // show loading status to false\n            dispatch({\n                type: USER_STATUS,\n                payload: false\n            });\n        });\n    };\n}\n\nexport function googleLogin() {\n    return dispatch => auth.signInWithPopup(googleProvider);\n}\n\nexport function twitterLogin() {\n    return dispatch => auth.signInWithPopup(twitterProvider);\n}\n\nexport function logout() {\n    return dispatch => auth.signOut();\n}\n","import React, { Component } from 'react';\nimport _ from 'lodash';\nimport { connect } from 'react-redux';\nimport { getNotes, saveNote, deleteNote } from '../actions/notesAction';\nimport NoteCard from './NoteCard';\nimport { getUser } from '../actions/userAction';\nimport { Link } from 'react-router-dom';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        // state\n        this.state = {\n            title: '',\n            body: ''\n        };\n        // bind\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.renderNotes = this.renderNotes.bind(this);\n    }\n\n    // handle change\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    // handle submit\n    handleSubmit(e) {\n        e.preventDefault();\n        const note = {\n            title: this.state.title,\n            body: this.state.body,\n            uid: this.props.user.uid\n        };\n        this.props.saveNote(note);\n        this.setState({\n            title: '',\n            body: ''\n        });\n    }\n\n    // render notes\n    renderNotes() {\n        return _.map(this.props.notes, (note, key) => {\n            return (\n                <NoteCard key={key}>\n                    <Link to={`/${key}`}>\n                        <h2>{note.title}</h2>\n                    </Link>\n                    <p>{note.body}</p>\n                    {note.uid === this.props.user.uid && (\n                        <div>\n                            <button className=\"btn btn-danger btn-l\" onClick={() => this.props.deleteNote(key)}>\n                                Delete\n                            </button>\n                            <button className=\"btn btn-info btn-l pull-right\">\n                                <Link to={`/${key}/edit`}>Update</Link>\n                            </button>\n                        </div>\n                    )}\n                </NoteCard>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-2 text-center\">\n                        <img\n                            src={this.props.user.photoURL}\n                            height=\"100px\"\n                            className=\"img img-responsive cirlce\"\n                            style={{ padding: '20px' }}\n                        />\n                        <h4 className=\"username\">Welcome back {this.props.user.displayName}</h4>\n                    </div>\n                    <div className=\"col-sm-10\">\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <input\n                                    onChange={this.handleChange}\n                                    value={this.state.title}\n                                    type=\"text\"\n                                    name=\"title\"\n                                    className=\"form-control no-border\"\n                                    placeholder=\"Title...\"\n                                    required\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <textarea\n                                    onChange={this.handleChange}\n                                    value={this.state.body}\n                                    type=\"text\"\n                                    name=\"body\"\n                                    className=\"form-control no-border\"\n                                    placeholder=\"Body...\"\n                                    required\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary col-sm-12\">Save</button>\n                            </div>\n                        </form>\n                        <br />\n                        <br />\n                        <br />\n                        {this.renderNotes()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        notes: state.notes,\n        user: state.user\n    };\n}\n\nexport default connect(mapStateToProps, { getNotes, saveNote, deleteNote, getUser })(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport notesReducer from './notesReducer';\nimport userReducer from './userReducer';\nimport loadingReducer from './loadingReducer';\n\nconst rootReducer = combineReducers({\n    notes: notesReducer,\n    user: userReducer,\n    loading: loadingReducer\n});\n\nexport default rootReducer;\n","import { GET_NOTES } from '../actionTypes';\n\nexport default function(state = {}, action) {\n    switch (action.type) {\n        case GET_NOTES:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { GET_USER } from '../actionTypes';\n\nexport default function(state = {}, action) {\n    switch (action.type) {\n        case GET_USER:\n            return action.payload;\n        default:\n            return state;\n    }\n}\n","import { NOTES_STATUS, USER_STATUS } from '../actionTypes';\n\nexport default function(state = {}, action) {\n    switch (action.type) {\n        case NOTES_STATUS:\n            return { ...state, notes: action.payload };\n        case USER_STATUS:\n            return { ...state, user: action.payload };\n        default:\n            return state;\n    }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { googleLogin, twitterLogin } from \"../actions/userAction\";\n\nclass Login extends Component {\n    componentWillMount() {\n        if (this.props.user !== null) {\n            // console.log(this.props.history);\n            this.props.history.push(\"/\");\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.user !== null) {\n            nextProps.history.push(\"/\");\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div\n                        className=\"col-sm-12 jumbotron\"\n                        style={{ marginTop: \"-20px\" }}\n                    >\n                        <h1>DIARY | {new Date().getFullYear()}</h1>\n                        <h2>\n                            <i>\n                                Login with your favourite <u>Social Network</u>{\" \"}\n                                to start writing!\n                            </i>\n                        </h2>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 text-center\">\n                        <button\n                            className=\"btn btn-danger col-sm-6 col-sm-offset-3 login\"\n                            onClick={this.props.googleLogin}\n                        >\n                            Login with Google\n                        </button>\n                    </div>\n                </div>\n                <br></br>\n                <br></br>\n                <div className=\"row\">\n                    <div className=\"col-sm-12 text-center\">    \n                        <button \n                            className=\"btn btn-info col-sm-6 col-sm-offset-3 login\" \n                            onClick={this.props.twitterLogin}\n                        >\n                            Login with Twitter\n                        </button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, onwProps) {\n    return {\n        user: state.user\n    };\n}\n\nexport default connect(\n    mapStateToProps,\n    { googleLogin, twitterLogin }\n)(Login);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getUser, logout } from '../actions/userAction';\n\nclass Header extends Component {\n    render() {\n        return (\n            <nav className=\"navbar navbar-default\">\n                <div className=\"container-fluid\">\n                    <div className=\"navbar-header\">\n                        <button type=\"button\" className=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                            <span className=\"icon-bar\" />\n                        </button>\n\n                        <Link className=\"navbar-brand\" to=\"/\">\n                            DIARY\n                        </Link>\n                    </div>\n\n                    <div className=\"collapse navbar-collapse\" id=\"myNavbar\">\n                        <ul className=\"nav navbar-nav navbar-right\">\n                            {this.props.user === null ? (\n                                <li>\n                                    <Link to=\"/login\">Login</Link>\n                                </li>\n                            ) : (\n                                <li>\n                                    <Link to=\"/logout\" onClick={() => this.props.logout()}>\n                                        Logout\n                                    </Link>\n                                </li>\n                            )}\n                        </ul>\n                    </div>\n                </div>\n            </nav>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        user: state.user\n    };\n}\n\nexport default connect(mapStateToProps, { getUser, logout })(Header);\n","import React from 'react';\nimport '../styles/loading.css';\n\nconst Loading = () => {\n    return (\n        <div className=\"flex-center position-ref full-height\">\n            <div className=\"title m-b-md\">Loading...</div>\n        </div>\n    );\n};\n\nexport default Loading;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// with withRouter You can get access to the history object’s properties\nimport { withRouter } from 'react-router-dom';\nimport { getUser } from '../actions/userAction';\nimport { getNotes } from '../actions/notesAction';\nimport Loading from '../components/Loading';\n\nclass LoadingComponent extends Component {\n    componentWillMount() {\n        const { userLoading, notesLoading } = this.props;\n        // if we havent tried to load the user, load user\n        if (userLoading === undefined) {\n            this.props.getUser();\n        }\n\n        // if we havent tried to get notes, load notes\n        if (notesLoading === undefined) {\n            this.props.getNotes();\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // wait for user to get authenticated and try to load notes\n        if (nextProps.notesLoading === -1 && nextProps.user !== null) {\n            this.props.getNotes();\n        }\n    }\n\n    render() {\n        const { userLoading, notesLoading, children } = this.props;\n        /**\n         * throughout the lifetime of app user and notes loading status will\n         * keep toggling between true and false\n         * when anything other than that toggling state such as true or false is in the state\n         * that means the loading operation is setteled and not active\n         * that time, show the enclosing components\n         * for everything else and inbetween show Loading\n         */\n        if ((!userLoading && !notesLoading) || this.props.user === null) {\n            return <div>{children}</div>;\n        } else {\n            return <Loading />;\n        }\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        userLoading: state.loading.user,\n        notesLoading: state.loading.notes,\n        user: state.user\n    };\n}\n\nexport default withRouter(connect(mapStateToProps, { getUser, getNotes })(LoadingComponent));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// with withRouter You can get access to the history object’s properties\nimport { withRouter } from 'react-router-dom';\n\nclass AuthenticatedComponent extends Component {\n    componentDidUpdate() {\n        // make sure the loading is done then if no user\n        // then push them to login page\n        const { userLoading, user } = this.props;\n        if (userLoading === false && !user) {\n            this.props.history.push('/login');\n        }\n    }\n\n    render() {\n        const { user, userLoading, children } = this.props;\n        return userLoading === false && user ? <div>{children}</div> : null;\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        userLoading: state.loading.user,\n        user: state.user\n    };\n}\n\nexport default withRouter(connect(mapStateToProps)(AuthenticatedComponent));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { saveComment } from '../actions/notesAction';\n\nclass SubmitComment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            commentBody: ''\n        };\n        // bind\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n            commentBody: e.target.value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        const comment = {\n            commentBody: this.state.commentBody,\n            uid: this.props.uid\n        };\n        // console.log(this.props.id, comment);\n        this.props.saveComment(this.props.id, comment);\n        this.setState({ commentBody: '' });\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <div className=\"form-group\">\n                        <textarea\n                            onChange={this.handleChange}\n                            value={this.state.commentBody}\n                            type=\"text\"\n                            name=\"commentBody\"\n                            className=\"form-control no-border\"\n                            placeholder=\"Write comment..\"\n                            required\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <button className=\"btn btn-success\">Add comment</button>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        uid: state.user.uid\n    };\n}\n\nexport default connect(mapStateToProps, { saveComment })(SubmitComment);\n","import React from 'react';\n\nconst Comment = ({ children }) => <div> &#8594; {children}</div>;\n\nexport default Comment;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SubmitComment from './SubmitComment';\nimport _ from 'lodash';\nimport Comment from './Comment';\n\nclass NoteDetail extends Component {\n    renderComments() {\n        const { note } = this.props;\n        return _.map(note.comments, (comment, key) => {\n            return (\n                <Comment key={key} id={key}>\n                    {comment.commentBody}\n                </Comment>\n            );\n        });\n    }\n\n    render() {\n        const { note } = this.props;\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-6 col-sm-offset-3\">\n                        <h1>{note.title}</h1>\n                        <p>{note.body}</p>\n                        <SubmitComment id={this.props.match.params.id} />\n                        {this.renderComments()}\n                        <br />\n                        <Link to=\"/\"> &#171; Back</Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        note: state.notes[ownProps.match.params.id],\n        uid: state.user.uid\n    };\n}\n\nexport default connect(mapStateToProps)(NoteDetail);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { editNote } from '../actions/notesAction';\n\nclass NoteEdit extends Component {\n    constructor(props) {\n        super(props);\n        // state\n        this.state = {\n            title: this.props.note.title,\n            body: this.props.note.body\n        };\n        // bind\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    // handle change\n    handleChange(e) {\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    // handle submit\n    handleSubmit(e) {\n        e.preventDefault();\n        const note = {\n            title: this.state.title,\n            body: this.state.body,\n            uid: this.props.uid\n        };\n        this.props.editNote(this.props.match.params.id, note);\n        this.setState({\n            title: '',\n            body: ''\n        });\n        this.props.history.push('/');\n    }\n\n    render() {\n        return (\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-sm-6 col-sm-offset-3\">\n                        <form onSubmit={this.handleSubmit}>\n                            <div className=\"form-group\">\n                                <input\n                                    onChange={this.handleChange}\n                                    value={this.state.title}\n                                    type=\"text\"\n                                    name=\"title\"\n                                    className=\"form-control no-border\"\n                                    placeholder=\"Title...\"\n                                    required\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <textarea\n                                    onChange={this.handleChange}\n                                    value={this.state.body}\n                                    type=\"text\"\n                                    name=\"body\"\n                                    className=\"form-control no-border\"\n                                    placeholder=\"Body...\"\n                                    required\n                                />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <button className=\"btn btn-primary col-sm-12\">Update</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state, ownProps) {\n    return {\n        note: state.notes[ownProps.match.params.id],\n        uid: state.user.uid\n    };\n}\n\nexport default connect(mapStateToProps, { editNote })(NoteEdit);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport registerServiceWorker from './registerServiceWorker';\n// redux\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport rootReducer from './reducers';\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport Login from './components/Login';\nimport Header from './routes/Header';\nimport LoadingComponent from './components/LoadingComponent';\nimport AuthenticatedComponent from './components/AuthenticatedComponent';\nimport NoteDetail from './components/NoteDetail';\nimport NoteEdit from './components/NoteEdit';\nimport './styles/index.css';\n\n// create redux store -> reducers -> 'actions - actionType' | applyMiddleware()\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\n// provide the store to react\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <LoadingComponent>\n                <div>\n                    <Switch>\n                        <Route path=\"/login\" component={Login} exact={true} />\n                        <Redirect from=\"/logout\" to=\"/login\" />\n                        <AuthenticatedComponent>\n                            <Header />\n                            <Route path=\"/:id/edit\" component={NoteEdit} exact={true} />\n                            <Route path=\"/:id\" component={NoteDetail} exact={true} />\n                            <Route path=\"/\" component={App} exact={true} />\n                        </AuthenticatedComponent>\n                    </Switch>\n                </div>\n            </LoadingComponent>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}